#!/bin/bash

#COLOURS 
 greenColour="\e[0;32m\033[1m"
 endColour="\033[0m\e[0m"
 redColour="\e[0;31m\033[1m"
 blueColour="\e[0;34m\033[1m"
 yellowColour="\e[0;33m\033[1m"
 purpleColour="\e[0;35m\033[1m"
 turquoiseColour="\e[0;36m\033[1m"
 grayColour="\e[0;37m\033[1m"

#Function Trap
function ctrl_c(){
	echo -e "\n${yellowColour}[!]${endColour} ${redColour}Saliendo ....${endColour}\n"
	tput cnorm; exit 1
}
#Traps
trap ctrl_c INT

#Trap bootons
function runn(){
	echo -e "running"
}

#Banner 
function banner(){
echo -e "\n"
echo -ne "${redColour}";sleep 0.1
echo -e "  (       )          *   )        (   ";sleep 0.1
echo -e "  )\ ) ( /(          )  /(        )\  ";sleep 0.1
echo -ne "${endColour}${yellowColour}"
echo -e "  (()/( )\())  )    ( )(_)|    ( ((_) ";sleep 0.1
echo -e "  ((_)|(_)\ /(/(   (_(_()))\   )\ _   ";sleep 0.1
echo -ne "${endColour}${purpleColour}"
echo -e " _ | || |(_|(_)_\  |_   _((_) ((_) |  ";sleep 0.1
echo -e "/ _  || / /|  _ \)   | |/ _ \/ _ \ |  ";sleep 0.1
echo -e "\__,_||_\_\| .__/    |_|\___/\___/_|  ";sleep 0.1
echo -e "           |_|                        ";sleep 0.1
echo -e "${endColour}\n"
}

#VarGlobals
user_mail="$(echo "jjuannca651@gmail.com" | base64 | rev | base64 | rev | base64)"
user_semroot="$(cat /etc/passwd | grep home | tr ":" '\n' | head -n1)"
#Function Get output panel Helper
function helPanel(){
	banner
	echo -e "\t${blueColor}[*] -a ${endColour}${grayColour}Help Panel${endColour}\n"
	echo -e "\t${blueColor}[*] -a ${endColour}${grayColour}Administration${endColour}"
	echo -e "\t\t${blueColour}[*] -a ${endColour}${grayColour} ${yellowColour}help${endColour} \t\t Change Date${endColour}"
	echo -e "\t\t${blueColour}[*] -a ${endColour}${grayColour} ${yellowColour}dates${endColour} \t\t Change Date${endColour}"

	echo -e "\n\t${blueColor}[*] -a ${endColour}${grayColour}Hack Mode${endColour}"
	echo -e "\t\t${blueColour}[*] -a ${endColour}${grayColour} ${yellowColour}ping_d${endColour} \t\t Ping To Host${endColour}"
	echo -e "\t\t${blueColour}[*] -a ${endColour}${grayColour} ${yellowColour}ssh_a${endColour} \t\t Attack Shh Port${endColour}"
	echo -e "\t\t${blueColour}[*] -a ${endColour}${grayColour} ${yellowColour}wfuzz_a${endColour} \t Http_File Inclusion Force${endColour}"
	echo -e "\t\t${blueColour}[*] -a ${endColour}${grayColour} ${yellowColour}lport${endColour} \t\t listen host in port ${endColour}"
	echo -e "\t\t${blueColour}[*] -a ${endColour}${grayColour} ${yellowColour}?${endColour} \t\t ¿${endColour}"

}

#function change Dates
function dates(){
    echo -e "${purpleColour}Date : FORMAT${endColour}${yellowColour} Y:M:D${endColour}";
    read -e date
    echo -e "${purpleColour}Hour : FORMAT${endColour}${yellowColour} 00:00${endColour} "
    read -e hour
    date --set=$date;date --set $hour 
    if [ "$(echo $?)" -eq 0 ]; then 
		exit 0
	else
    	exit 1
	fi
}

#Function rmk
function rmk(){
	scrub -p dod $1 
	shred -zun 1 -v $1 
	}

user_new="$(echo $user_mail | base64 -d | rev | base64 -d | rev | base64 -d)"
usr_route="/home/$user_semroot/.config/tmp/ssh_keys"

#function key_ssh
function key_ssh(){
	echo -e "\nSSH KEY GENERATOR"
	cd $usr_route
	encrip=$(cat /dev/urandom| tr -dc 'A-Za-z0-9_' | fold -w 8| head -5|awk 'NF{print $NF}')
	echo $encrip | base64 | rev | xclip -sel clip
	ssh-keygen -t rsa -b 4096 -C "$user_mail" > /dev/null 2>&1
	eval "$(ssh-agent -s)"
	ssh-add /home/$user_semroot/.config/tmp/ssh_keys/"$(echo $encrip | base64 | rev)" > /dev/null 2>&1
	cd -
	sleep 5 && rmk $usr_route/"$(echo $encrip | base64 | rev)" > /dev/null 2>&1 &
	sleep 5 && rmk $usr_route/"$(echo $encrip | base64 | rev).pub" > /dev/null 2>&1 &
	}

#Function manage nmap
function ssh_a(){
	echo -e "${purpleColour}LHOST${endColour}${yellowColour}"
	read -e LHOST
	echo -e "${endColur}${purpleColour}LPORT${endColour}${yellowColour}"
	read -e LPORT
	echo -e "${endColour}${greenColour}"
	nmap --script ssh-brute -p$LPORT $LHOST
	echo -e "${endColour}"
}

# Funtion info of the host
function ping_d(){
	echo -e "LHOST"
	read -e LHOST
S_o="$(ping -c 1 $LHOST | grep ttl |tr " " '\n:'| grep ttl | awk 'NF{print $NF}' | tr "=" '\n:'| tail -n 1)"
	if [ "$(echo $S_o)" == 128 ]; then
		echo  -e "\nS-O:\n\t\t ${greenColour}[*] Windows${endColour}"
	elif [ "$(echo $S_o)" == 63 ]; then 
		echo  -e "\nS-O:\n\t\t ${greenColour}[*] Linux${endColour}"
	else
		echo -e "\n${redColour}Error"
		echo -e "Dead Host "
        echo -e "[*] $LHOST${endColour}"
		exit 1
	fi
	if [ "$(echo $?)" == 0 ]; then 
		echo -e "\nStatus: ${greenColour}\n\t\t [*]Life Host${endColour}"
		echo -e "\nHost: \n\t\t ${greenColour}[*] $LHOST${endColour}"
	fi
}

#Init Vpn
function hvpn(){
	echo "${redColour}[!]${endColour} ${greenColour}Running Vpn${endColour}"
	sudo openvpn ~/Documentos/HOLBERTON/PERSONAL_REPO/HTB/dkbarb10.ovpn > /dev/null 2>&1
	echo "[**]"
}


#Listening Port
function lport(){
	echo "Host"
	read -e HOST
	echo "Port"
	read -e PORT
	echo -e "\n"
	sudo nc -nvlp $HOST:$PORT1

}

#Funtion RmkHistory
function rmkh(){
	echo -e "${greenColour}"
	echo -e "${redColour}[!]limpiando${endColour}${greenColour}"
	scrub -p dod /home/dkbarb10/.zsh_history
	scrub -p dod /home/dkbarb10/.bash_history
	shred -zun 10 -v /home/dkbarb10/.zsh_history
	shred -zun 10 -v /home/dkbarb10/.bash_history
	echo -e "${endColour}"
	
	if [ "$(echo $?)" -eq 0 ]; then
		echo -e "${greenColour}[*] Command Execute Correctly${endColour}"
		exit 0
	else
		echo -e "${redColour} [¡] Error !"
		exit 1
	fi
}


tput civis

if [ "$(id -u)" -eq "0" ]; then

	declare -i counter=0;while getopts "a:h:" arg ; do 
		case $arg in
 	 		a) runn=$OPTARG; let counter+=1;;
 			h) helPanel;;
		esac
	done

	if [ "$(echo $counter)" -eq 0 ]; then 
		helPanel
	else
		if [ "$(echo $runn)" == "exit" ]; then 
			exit 0
		elif [ "$(echo $runn)" == "help" ]; then
			helPanel
		elif [ "$(echo $runn)" == "dates" ]; then
			dates
		elif [ "$(echo $runn)" == "rmkh" ]; then
			rmkh
		elif [ "$(echo $runn)" == "ssh_a" ]; then
			ssh_a
		elif [ "$(echo $runn)" == "wfuzz_a" ]; then
			wfuzz -c --hc=404 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://10.10.11.100/FUZZ
		elif [ "$(echo $runn)" == "ping_d" ]; then
			ping_d
		elif [ "$(echo $runn)" == "lport" ]; then
			lport
		elif [ "$(echo $runn)" == "hvpn" ]; then
			hvpn
		elif [ "$(echo $runn)" == "key_ssh" ]; then
			key_ssh
		else
			exit 1
		fi
	fi
else
	echo -e "\n${blueColour}[!]${endColour} ${redColour} you dont have root privileges\n ${endColour}"
fi
